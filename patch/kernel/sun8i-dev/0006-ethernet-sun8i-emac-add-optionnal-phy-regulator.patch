From f1e70d94358eaf119507c893676e66791891ea63 Mon Sep 17 00:00:00 2001
From: LABBE Corentin <clabbe.montjoie@gmail.com>
Date: Sun, 10 Apr 2016 09:47:19 +0200
Subject: [PATCH 06/13] ethernet: sun8i-emac: add optionnal phy regulator

Signed-off-by: LABBE Corentin <clabbe.montjoie@gmail.com>
---
 drivers/net/ethernet/allwinner/sun8i-emac.c | 24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/allwinner/sun8i-emac.c b/drivers/net/ethernet/allwinner/sun8i-emac.c
index 2142f92..23b5e98 100644
--- a/drivers/net/ethernet/allwinner/sun8i-emac.c
+++ b/drivers/net/ethernet/allwinner/sun8i-emac.c
@@ -190,6 +190,7 @@ struct sun8i_emac_priv {
 	struct device_node *phy_node;
 	struct clk *ahb_clk;
 	struct clk *tx_clk;
+	struct regulator *regulator;
 
 	struct reset_control *rst_phy;
 	struct reset_control *rst;
@@ -776,11 +777,17 @@ static int sun8i_emac_init(struct net_device *ndev)
 		return ret;
 	}
 
+	if (priv->regulator) {
+		ret = regulator_enable(priv->regulator);
+		if (ret)
+			goto err_disable_ahb_clk;
+	}
+
 	if (priv->rst) {
 		ret = reset_control_deassert(priv->rst);
 		if (ret) {
 			netdev_err(ndev, "Could not deassert reset\n");
-			goto err_disable_ahb_clk;
+			goto err_regulator;
 		}
 	}
 
@@ -808,6 +815,9 @@ err_disable_tx_clk:
 		clk_disable_unprepare(priv->tx_clk);
 	if (priv->rst)
 		reset_control_assert(priv->rst);
+err_regulator:
+	if (priv->regulator)
+		regulator_disable(priv->regulator);
 err_disable_ahb_clk:
 	clk_disable_unprepare(priv->ahb_clk);
 	return ret;
@@ -825,6 +835,9 @@ static void sun8i_emac_uninit(struct net_device *ndev)
 	if (priv->rst)
 		reset_control_assert(priv->rst);
 
+	if (priv->regulator)
+		regulator_disable(priv->regulator);
+
 	clk_disable_unprepare(priv->ahb_clk);
 }
 
@@ -1632,6 +1645,15 @@ static int sun8i_emac_probe(struct platform_device *pdev)
 		priv->rst = NULL;
 	}
 
+	/* Optional regulator for PHY */
+	priv->regulator = devm_regulator_get_optional(priv->dev, "phy");
+	if (IS_ERR(priv->regulator)) {
+		if (PTR_ERR(priv->regulator) == -EPROBE_DEFER)
+			return -EPROBE_DEFER;
+		dev_dbg(priv->dev, "no regulator found\n");
+		priv->regulator = NULL;
+	}
+
 	spin_lock_init(&priv->lock);
 	spin_lock_init(&priv->tx_lock);
 
-- 
2.7.4

